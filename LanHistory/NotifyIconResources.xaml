<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:corlib="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:vm="clr-namespace:Olbert.LanHistory.ViewModel"
                    xmlns:lh="clr-namespace:Olbert.LanHistory"
                    xmlns:command="http://www.galasoft.ch/mvvmlight">

    <lh:IntervalEqualityConverter x:Key="IntervalEquality" />
    <lh:TimeSpanFormatter x:Key="TimeSpanFormatter"/>
    <lh:NullableBooleanConverter x:Key="NullableBoolean" />

    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false"
                 x:Key="SysTrayMenu">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Opened">
                <command:EventToCommand Command="{Binding OpeningEventCommand, Mode=OneWay}" MustToggleIsEnabledValue="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <MenuItem Header="{Binding ServerStatus}" IsHitTestVisible="False" />
        <MenuItem Header="{Binding StatusMesg}" IsHitTestVisible="False" />
        <MenuItem Header="{Binding NextBackup}" IsHitTestVisible="False" />

        <Separator />
        
        <MenuItem Header="Backup Now" 
                  Command="{Binding BackupCommand}" />
        
        <MenuItem ItemsSource="{Binding DefaultIntervals}" Header="Backup Every...">
            <MenuItem.ItemContainerStyle>
                <Style>
                    <Setter Property="MenuItem.Header" Value="{Binding Interval, Converter={StaticResource TimeSpanFormatter}}" />
                    <Setter Property="MenuItem.IsChecked" Value="{Binding IsSelected}" />
                    <Setter Property="MenuItem.IsHitTestVisible" Value="{Binding IsHitTestVisible}" />
                    <Setter Property="MenuItem.Command" Value="{Binding SetBackupIntervalCommand}" />
                    <Setter Property="MenuItem.CommandParameter" Value="{Binding Interval}" />
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>

        <MenuItem Header="Custom Interval...">
            <xctk:TimeSpanUpDown Value="{Binding Interval}"
                                 Minimum="0:05"/>
        </MenuItem>
        
        <Separator />

        <MenuItem Header="Server Boot Time, minutes...">
            <xctk:IntegerUpDown DockPanel.Dock="Left" 
                                Minimum="1"
                                Value="{Binding WakeUpTime}" />
        </MenuItem>
        
        <MenuItem Header="Wake Server" Command="{Binding WakeServerCommand}" />
        
        <Separator />
        
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/assets/filehist32x32.ico"
                    ContextMenu="{StaticResource SysTrayMenu}">

        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <vm:ContextMenuViewModel />
        </tb:TaskbarIcon.DataContext>
        
        <tb:TaskbarIcon.TrayToolTip>
            <ToolTip Placement="Mouse" Content="LanHistory: right-click for menu" />
        </tb:TaskbarIcon.TrayToolTip>

    </tb:TaskbarIcon>

</ResourceDictionary>